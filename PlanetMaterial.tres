[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform float min_height;
uniform float max_height;
uniform sampler2D height_color;

varying float height;


void fragment() {
	float t = height / (max_height-min_height) - (min_height / (max_height-min_height));
	vec3 color = texture(height_color, vec2(t, 0.0)).rgb;
	ALBEDO = color;
}

void vertex() {
	height = length(VERTEX);
}
"

[sub_resource type="Gradient" id=6]
offsets = PoolRealArray( 0.00510204, 0.178571, 0.285714, 0.428571, 0.591837, 0.69898, 0.821429, 0.994898, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.539063, 0.111603, 0.111603, 1, 0.316592, 0.511719, 0.21788, 1, 0.929688, 0.757187, 0.239685, 1, 0, 0, 0, 1, 0.103409, 0.384342, 0.980469, 1, 0.277018, 0.447754, 0.190645, 1, 0.854526, 0.855213, 0.856671, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=5]
gradient = SubResource( 6 )
width = 128

[resource]
shader = SubResource( 4 )
shader_param/min_height = 2.20497
shader_param/max_height = 2.89519
shader_param/height_color = SubResource( 5 )
